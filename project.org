* Player
** Params
*** Friendliness function
*** Life points
*** starting memories
** Needs PRNG
** Functions
*** decision function
**** store "memory" of previous rounds in a char*? Int? What works best in C?
**** should probably be signed char.
**** pass the outcomes of the four nearest games as argument
**** rotate off oldest "memory" push new memory
**** return friendliness function evaluated at new value
*** get decision
    
* Board
** Params
*** number of players
** Needs a PRNG
** Has a separate 2d array of everyone's certainty values to reference for death/birth
** Functions
*** refresh board
**** circleOfLife will traverse the board and replace players with Life Points <= 0 with new players based on certainty values from reference array. At the end of this, the certainty array must be updated.
***** babies have neutral memories
*** round
**** payoff( getDecision(G[i][j], G[i][j+1 mod n]) )
**** payoff( getDecision(G[i][j], G[i][j-i mod n]) )
**** payoff( getDecision(G[i][j], G[i-1 mod n][j]) )
**** payoff( getDecision(G[i][j], G[i+1 mod n][j]) )
**** setDecision(  getD(G[i][j+1 mod n]), getD(G[i][j-i mod n]), ...G[i+1 mod n][j])
*** print results
    
    
* Main
** Command line args
*** size of board
*** how many rounds
*** how many certain, how many uncertain, how many random
*** altruism value
*** life points

    
